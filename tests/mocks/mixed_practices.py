"""
Este m√≥dulo contiene ejemplos de buenas y malas pr√°cticas en documentaci√≥n.
"""

# ‚úÖ MUY BUENAS PR√ÅCTICAS (Documentaci√≥n clara y detallada)
class Calculadora:
    """
    Clase para realizar operaciones matem√°ticas b√°sicas.
    """

    def suma(self, a: float, b: float) -> float:
        """
        Suma dos n√∫meros y devuelve el resultado.

        :param a: Primer n√∫mero
        :param b: Segundo n√∫mero
        :return: La suma de `a` y `b`
        """
        return a + b

    def resta(self, a: float, b: float) -> float:
        """
        Resta dos n√∫meros y devuelve el resultado.

        :param a: Primer n√∫mero
        :param b: Segundo n√∫mero
        :return: La resta de `a` y `b`
        """
        return a - b

# üëç BUENAS PR√ÅCTICAS (Documentaci√≥n breve pero suficiente)
class Usuario:
    """Representa un usuario del sistema."""

    def __init__(self, nombre: str):
        """Inicializa un usuario con su nombre."""
        self.nombre = nombre

    def mostrar(self):
        """Muestra el nombre del usuario."""
        print(f"Usuario: {self.nombre}")

# ‚ö†Ô∏è MALAS PR√ÅCTICAS (Sin docstrings en m√©todos importantes)
class SinDocstring:
    """Clase sin documentaci√≥n detallada."""

    def metodo(self):
        pass  # No hay docstring, no se sabe qu√© hace este m√©todo

    def otro_metodo(self, x):
        return x * 2  # No hay informaci√≥n sobre `x` ni qu√© devuelve la funci√≥n

# ‚ùå MUY MALAS PR√ÅCTICAS (Nada de documentaci√≥n, c√≥digo poco entendible)
def f(x, y):
    return x**y  # No hay docstring, no se sabe qu√© hace

class X:
    def y(self, z):
        return z + 1  # No hay contexto, nombres poco descriptivos
